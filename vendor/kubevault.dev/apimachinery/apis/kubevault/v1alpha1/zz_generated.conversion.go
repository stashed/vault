//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	time "time"
	unsafe "unsafe"

	v1alpha2 "kubevault.dev/apimachinery/apis/kubevault/v1alpha2"

	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
	monitoringagentapiapiv1 "kmodules.xyz/monitoring-agent-api/api/v1"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AllowedSecretEngines)(nil), (*v1alpha2.AllowedSecretEngines)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AllowedSecretEngines_To_v1alpha2_AllowedSecretEngines(a.(*AllowedSecretEngines), b.(*v1alpha2.AllowedSecretEngines), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.AllowedSecretEngines)(nil), (*AllowedSecretEngines)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AllowedSecretEngines_To_v1alpha1_AllowedSecretEngines(a.(*v1alpha2.AllowedSecretEngines), b.(*AllowedSecretEngines), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AuthMethodStatus)(nil), (*v1alpha2.AuthMethodStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AuthMethodStatus_To_v1alpha2_AuthMethodStatus(a.(*AuthMethodStatus), b.(*v1alpha2.AuthMethodStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.AuthMethodStatus)(nil), (*AuthMethodStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AuthMethodStatus_To_v1alpha1_AuthMethodStatus(a.(*v1alpha2.AuthMethodStatus), b.(*AuthMethodStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*BackendStorageSpec)(nil), (*v1alpha2.BackendStorageSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_BackendStorageSpec_To_v1alpha2_BackendStorageSpec(a.(*BackendStorageSpec), b.(*v1alpha2.BackendStorageSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.BackendStorageSpec)(nil), (*BackendStorageSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_BackendStorageSpec_To_v1alpha1_BackendStorageSpec(a.(*v1alpha2.BackendStorageSpec), b.(*BackendStorageSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FileSpec)(nil), (*v1alpha2.FileSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FileSpec_To_v1alpha2_FileSpec(a.(*FileSpec), b.(*v1alpha2.FileSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.FileSpec)(nil), (*FileSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_FileSpec_To_v1alpha1_FileSpec(a.(*v1alpha2.FileSpec), b.(*FileSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*InmemSpec)(nil), (*v1alpha2.InmemSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_InmemSpec_To_v1alpha2_InmemSpec(a.(*InmemSpec), b.(*v1alpha2.InmemSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.InmemSpec)(nil), (*InmemSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_InmemSpec_To_v1alpha1_InmemSpec(a.(*v1alpha2.InmemSpec), b.(*InmemSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubernetesSecretSpec)(nil), (*v1alpha2.KubernetesSecretSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KubernetesSecretSpec_To_v1alpha2_KubernetesSecretSpec(a.(*KubernetesSecretSpec), b.(*v1alpha2.KubernetesSecretSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.KubernetesSecretSpec)(nil), (*KubernetesSecretSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_KubernetesSecretSpec_To_v1alpha1_KubernetesSecretSpec(a.(*v1alpha2.KubernetesSecretSpec), b.(*KubernetesSecretSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ModeSpec)(nil), (*v1alpha2.ModeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ModeSpec_To_v1alpha2_ModeSpec(a.(*ModeSpec), b.(*v1alpha2.ModeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.ModeSpec)(nil), (*ModeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ModeSpec_To_v1alpha1_ModeSpec(a.(*v1alpha2.ModeSpec), b.(*ModeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NamedServiceTemplateSpec)(nil), (*v1alpha2.NamedServiceTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NamedServiceTemplateSpec_To_v1alpha2_NamedServiceTemplateSpec(a.(*NamedServiceTemplateSpec), b.(*v1alpha2.NamedServiceTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.NamedServiceTemplateSpec)(nil), (*NamedServiceTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NamedServiceTemplateSpec_To_v1alpha1_NamedServiceTemplateSpec(a.(*v1alpha2.NamedServiceTemplateSpec), b.(*NamedServiceTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.RaftSpec)(nil), (*RaftSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RaftSpec_To_v1alpha1_RaftSpec(a.(*v1alpha2.RaftSpec), b.(*RaftSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SecretEngineNamespaces)(nil), (*v1alpha2.SecretEngineNamespaces)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SecretEngineNamespaces_To_v1alpha2_SecretEngineNamespaces(a.(*SecretEngineNamespaces), b.(*v1alpha2.SecretEngineNamespaces), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.SecretEngineNamespaces)(nil), (*SecretEngineNamespaces)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_SecretEngineNamespaces_To_v1alpha1_SecretEngineNamespaces(a.(*v1alpha2.SecretEngineNamespaces), b.(*SecretEngineNamespaces), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TLSPolicy)(nil), (*v1alpha2.TLSPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_TLSPolicy_To_v1alpha2_TLSPolicy(a.(*TLSPolicy), b.(*v1alpha2.TLSPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.TLSPolicy)(nil), (*TLSPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_TLSPolicy_To_v1alpha1_TLSPolicy(a.(*v1alpha2.TLSPolicy), b.(*TLSPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*UnsealerSpec)(nil), (*v1alpha2.UnsealerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_UnsealerSpec_To_v1alpha2_UnsealerSpec(a.(*UnsealerSpec), b.(*v1alpha2.UnsealerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.UnsealerSpec)(nil), (*UnsealerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_UnsealerSpec_To_v1alpha1_UnsealerSpec(a.(*v1alpha2.UnsealerSpec), b.(*UnsealerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VaultServer)(nil), (*v1alpha2.VaultServer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VaultServer_To_v1alpha2_VaultServer(a.(*VaultServer), b.(*v1alpha2.VaultServer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.VaultServer)(nil), (*VaultServer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_VaultServer_To_v1alpha1_VaultServer(a.(*v1alpha2.VaultServer), b.(*VaultServer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VaultServerList)(nil), (*v1alpha2.VaultServerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VaultServerList_To_v1alpha2_VaultServerList(a.(*VaultServerList), b.(*v1alpha2.VaultServerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.VaultServerList)(nil), (*VaultServerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_VaultServerList_To_v1alpha1_VaultServerList(a.(*v1alpha2.VaultServerList), b.(*VaultServerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VaultServerSpec)(nil), (*v1alpha2.VaultServerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VaultServerSpec_To_v1alpha2_VaultServerSpec(a.(*VaultServerSpec), b.(*v1alpha2.VaultServerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VaultServerStatus)(nil), (*v1alpha2.VaultServerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VaultServerStatus_To_v1alpha2_VaultServerStatus(a.(*VaultServerStatus), b.(*v1alpha2.VaultServerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.VaultServerStatus)(nil), (*VaultServerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_VaultServerStatus_To_v1alpha1_VaultServerStatus(a.(*v1alpha2.VaultServerStatus), b.(*VaultServerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VaultStatus)(nil), (*v1alpha2.VaultStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VaultStatus_To_v1alpha2_VaultStatus(a.(*VaultStatus), b.(*v1alpha2.VaultStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha2.VaultStatus)(nil), (*VaultStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_VaultStatus_To_v1alpha1_VaultStatus(a.(*v1alpha2.VaultStatus), b.(*VaultStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AuthMethod)(nil), (*v1alpha2.AuthMethod)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AuthMethod_To_v1alpha2_AuthMethod(a.(*AuthMethod), b.(*v1alpha2.AuthMethod), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AwsKmsSsmSpec)(nil), (*v1alpha2.AwsKmsSsmSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AwsKmsSsmSpec_To_v1alpha2_AwsKmsSsmSpec(a.(*AwsKmsSsmSpec), b.(*v1alpha2.AwsKmsSsmSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AzureKeyVault)(nil), (*v1alpha2.AzureKeyVault)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AzureKeyVault_To_v1alpha2_AzureKeyVault(a.(*AzureKeyVault), b.(*v1alpha2.AzureKeyVault), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AzureSpec)(nil), (*v1alpha2.AzureSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AzureSpec_To_v1alpha2_AzureSpec(a.(*AzureSpec), b.(*v1alpha2.AzureSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ConsulSpec)(nil), (*v1alpha2.ConsulSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ConsulSpec_To_v1alpha2_ConsulSpec(a.(*ConsulSpec), b.(*v1alpha2.ConsulSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*DynamoDBSpec)(nil), (*v1alpha2.DynamoDBSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DynamoDBSpec_To_v1alpha2_DynamoDBSpec(a.(*DynamoDBSpec), b.(*v1alpha2.DynamoDBSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*EtcdSpec)(nil), (*v1alpha2.EtcdSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EtcdSpec_To_v1alpha2_EtcdSpec(a.(*EtcdSpec), b.(*v1alpha2.EtcdSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*GcsSpec)(nil), (*v1alpha2.GcsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GcsSpec_To_v1alpha2_GcsSpec(a.(*GcsSpec), b.(*v1alpha2.GcsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*GoogleKmsGcsSpec)(nil), (*v1alpha2.GoogleKmsGcsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GoogleKmsGcsSpec_To_v1alpha2_GoogleKmsGcsSpec(a.(*GoogleKmsGcsSpec), b.(*v1alpha2.GoogleKmsGcsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*MySQLSpec)(nil), (*v1alpha2.MySQLSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MySQLSpec_To_v1alpha2_MySQLSpec(a.(*MySQLSpec), b.(*v1alpha2.MySQLSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*PostgreSQLSpec)(nil), (*v1alpha2.PostgreSQLSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PostgreSQLSpec_To_v1alpha2_PostgreSQLSpec(a.(*PostgreSQLSpec), b.(*v1alpha2.PostgreSQLSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*RaftSpec)(nil), (*v1alpha2.RaftSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RaftSpec_To_v1alpha2_RaftSpec(a.(*RaftSpec), b.(*v1alpha2.RaftSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*S3Spec)(nil), (*v1alpha2.S3Spec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_S3Spec_To_v1alpha2_S3Spec(a.(*S3Spec), b.(*v1alpha2.S3Spec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*SwiftSpec)(nil), (*v1alpha2.SwiftSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SwiftSpec_To_v1alpha2_SwiftSpec(a.(*SwiftSpec), b.(*v1alpha2.SwiftSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.AuthMethod)(nil), (*AuthMethod)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AuthMethod_To_v1alpha1_AuthMethod(a.(*v1alpha2.AuthMethod), b.(*AuthMethod), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.AwsKmsSsmSpec)(nil), (*AwsKmsSsmSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AwsKmsSsmSpec_To_v1alpha1_AwsKmsSsmSpec(a.(*v1alpha2.AwsKmsSsmSpec), b.(*AwsKmsSsmSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.AzureKeyVault)(nil), (*AzureKeyVault)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AzureKeyVault_To_v1alpha1_AzureKeyVault(a.(*v1alpha2.AzureKeyVault), b.(*AzureKeyVault), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.AzureSpec)(nil), (*AzureSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AzureSpec_To_v1alpha1_AzureSpec(a.(*v1alpha2.AzureSpec), b.(*AzureSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.ConsulSpec)(nil), (*ConsulSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ConsulSpec_To_v1alpha1_ConsulSpec(a.(*v1alpha2.ConsulSpec), b.(*ConsulSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.DynamoDBSpec)(nil), (*DynamoDBSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_DynamoDBSpec_To_v1alpha1_DynamoDBSpec(a.(*v1alpha2.DynamoDBSpec), b.(*DynamoDBSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.EtcdSpec)(nil), (*EtcdSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_EtcdSpec_To_v1alpha1_EtcdSpec(a.(*v1alpha2.EtcdSpec), b.(*EtcdSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.GcsSpec)(nil), (*GcsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GcsSpec_To_v1alpha1_GcsSpec(a.(*v1alpha2.GcsSpec), b.(*GcsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.GoogleKmsGcsSpec)(nil), (*GoogleKmsGcsSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_GoogleKmsGcsSpec_To_v1alpha1_GoogleKmsGcsSpec(a.(*v1alpha2.GoogleKmsGcsSpec), b.(*GoogleKmsGcsSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.MySQLSpec)(nil), (*MySQLSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_MySQLSpec_To_v1alpha1_MySQLSpec(a.(*v1alpha2.MySQLSpec), b.(*MySQLSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.PostgreSQLSpec)(nil), (*PostgreSQLSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_PostgreSQLSpec_To_v1alpha1_PostgreSQLSpec(a.(*v1alpha2.PostgreSQLSpec), b.(*PostgreSQLSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.S3Spec)(nil), (*S3Spec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_S3Spec_To_v1alpha1_S3Spec(a.(*v1alpha2.S3Spec), b.(*S3Spec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.SwiftSpec)(nil), (*SwiftSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_SwiftSpec_To_v1alpha1_SwiftSpec(a.(*v1alpha2.SwiftSpec), b.(*SwiftSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha2.VaultServerSpec)(nil), (*VaultServerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_VaultServerSpec_To_v1alpha1_VaultServerSpec(a.(*v1alpha2.VaultServerSpec), b.(*VaultServerSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_AllowedSecretEngines_To_v1alpha2_AllowedSecretEngines(in *AllowedSecretEngines, out *v1alpha2.AllowedSecretEngines, s conversion.Scope) error {
	out.Namespaces = (*v1alpha2.SecretEngineNamespaces)(unsafe.Pointer(in.Namespaces))
	out.SecretEngines = *(*[]v1alpha2.SecretEngineType)(unsafe.Pointer(&in.SecretEngines))
	return nil
}

// Convert_v1alpha1_AllowedSecretEngines_To_v1alpha2_AllowedSecretEngines is an autogenerated conversion function.
func Convert_v1alpha1_AllowedSecretEngines_To_v1alpha2_AllowedSecretEngines(in *AllowedSecretEngines, out *v1alpha2.AllowedSecretEngines, s conversion.Scope) error {
	return autoConvert_v1alpha1_AllowedSecretEngines_To_v1alpha2_AllowedSecretEngines(in, out, s)
}

func autoConvert_v1alpha2_AllowedSecretEngines_To_v1alpha1_AllowedSecretEngines(in *v1alpha2.AllowedSecretEngines, out *AllowedSecretEngines, s conversion.Scope) error {
	out.Namespaces = (*SecretEngineNamespaces)(unsafe.Pointer(in.Namespaces))
	out.SecretEngines = *(*[]SecretEngineType)(unsafe.Pointer(&in.SecretEngines))
	return nil
}

// Convert_v1alpha2_AllowedSecretEngines_To_v1alpha1_AllowedSecretEngines is an autogenerated conversion function.
func Convert_v1alpha2_AllowedSecretEngines_To_v1alpha1_AllowedSecretEngines(in *v1alpha2.AllowedSecretEngines, out *AllowedSecretEngines, s conversion.Scope) error {
	return autoConvert_v1alpha2_AllowedSecretEngines_To_v1alpha1_AllowedSecretEngines(in, out, s)
}

func autoConvert_v1alpha1_AuthMethod_To_v1alpha2_AuthMethod(in *AuthMethod, out *v1alpha2.AuthMethod, s conversion.Scope) error {
	out.Type = v1alpha2.AuthMethodType(in.Type)
	out.Path = in.Path
	out.Description = in.Description
	// WARNING: in.Config requires manual conversion: does not exist in peer-type
	out.PluginName = in.PluginName
	out.Local = in.Local
	return nil
}

func autoConvert_v1alpha2_AuthMethod_To_v1alpha1_AuthMethod(in *v1alpha2.AuthMethod, out *AuthMethod, s conversion.Scope) error {
	out.Type = string(in.Type)
	out.Path = in.Path
	out.Description = in.Description
	// WARNING: in.KubernetesConfig requires manual conversion: does not exist in peer-type
	// WARNING: in.OIDCConfig requires manual conversion: does not exist in peer-type
	// WARNING: in.JWTConfig requires manual conversion: does not exist in peer-type
	out.PluginName = in.PluginName
	out.Local = in.Local
	return nil
}

func autoConvert_v1alpha1_AuthMethodStatus_To_v1alpha2_AuthMethodStatus(in *AuthMethodStatus, out *v1alpha2.AuthMethodStatus, s conversion.Scope) error {
	out.Type = v1alpha2.AuthMethodType(in.Type)
	out.Path = in.Path
	out.Status = v1alpha2.AuthMethodEnableDisableStatus(in.Status)
	out.Reason = in.Reason
	return nil
}

// Convert_v1alpha1_AuthMethodStatus_To_v1alpha2_AuthMethodStatus is an autogenerated conversion function.
func Convert_v1alpha1_AuthMethodStatus_To_v1alpha2_AuthMethodStatus(in *AuthMethodStatus, out *v1alpha2.AuthMethodStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_AuthMethodStatus_To_v1alpha2_AuthMethodStatus(in, out, s)
}

func autoConvert_v1alpha2_AuthMethodStatus_To_v1alpha1_AuthMethodStatus(in *v1alpha2.AuthMethodStatus, out *AuthMethodStatus, s conversion.Scope) error {
	out.Type = string(in.Type)
	out.Path = in.Path
	out.Status = AuthMethodEnableDisableStatus(in.Status)
	out.Reason = in.Reason
	return nil
}

// Convert_v1alpha2_AuthMethodStatus_To_v1alpha1_AuthMethodStatus is an autogenerated conversion function.
func Convert_v1alpha2_AuthMethodStatus_To_v1alpha1_AuthMethodStatus(in *v1alpha2.AuthMethodStatus, out *AuthMethodStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_AuthMethodStatus_To_v1alpha1_AuthMethodStatus(in, out, s)
}

func autoConvert_v1alpha1_AwsKmsSsmSpec_To_v1alpha2_AwsKmsSsmSpec(in *AwsKmsSsmSpec, out *v1alpha2.AwsKmsSsmSpec, s conversion.Scope) error {
	out.KmsKeyID = in.KmsKeyID
	out.SsmKeyPrefix = in.SsmKeyPrefix
	out.Region = in.Region
	// WARNING: in.CredentialSecret requires manual conversion: does not exist in peer-type
	out.Endpoint = in.Endpoint
	return nil
}

func autoConvert_v1alpha2_AwsKmsSsmSpec_To_v1alpha1_AwsKmsSsmSpec(in *v1alpha2.AwsKmsSsmSpec, out *AwsKmsSsmSpec, s conversion.Scope) error {
	out.KmsKeyID = in.KmsKeyID
	out.SsmKeyPrefix = in.SsmKeyPrefix
	out.Region = in.Region
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	out.Endpoint = in.Endpoint
	return nil
}

func autoConvert_v1alpha1_AzureKeyVault_To_v1alpha2_AzureKeyVault(in *AzureKeyVault, out *v1alpha2.AzureKeyVault, s conversion.Scope) error {
	out.VaultBaseURL = in.VaultBaseURL
	out.Cloud = in.Cloud
	out.TenantID = in.TenantID
	// WARNING: in.ClientCertSecret requires manual conversion: does not exist in peer-type
	// WARNING: in.AADClientSecret requires manual conversion: does not exist in peer-type
	out.UseManagedIdentity = in.UseManagedIdentity
	return nil
}

func autoConvert_v1alpha2_AzureKeyVault_To_v1alpha1_AzureKeyVault(in *v1alpha2.AzureKeyVault, out *AzureKeyVault, s conversion.Scope) error {
	out.VaultBaseURL = in.VaultBaseURL
	out.Cloud = in.Cloud
	out.TenantID = in.TenantID
	// WARNING: in.TLSSecretRef requires manual conversion: does not exist in peer-type
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	out.UseManagedIdentity = in.UseManagedIdentity
	return nil
}

func autoConvert_v1alpha1_AzureSpec_To_v1alpha2_AzureSpec(in *AzureSpec, out *v1alpha2.AzureSpec, s conversion.Scope) error {
	out.AccountName = in.AccountName
	// WARNING: in.AccountKeySecret requires manual conversion: does not exist in peer-type
	out.Container = in.Container
	out.MaxParallel = in.MaxParallel
	return nil
}

func autoConvert_v1alpha2_AzureSpec_To_v1alpha1_AzureSpec(in *v1alpha2.AzureSpec, out *AzureSpec, s conversion.Scope) error {
	out.AccountName = in.AccountName
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	out.Container = in.Container
	out.MaxParallel = in.MaxParallel
	return nil
}

func autoConvert_v1alpha1_BackendStorageSpec_To_v1alpha2_BackendStorageSpec(in *BackendStorageSpec, out *v1alpha2.BackendStorageSpec, s conversion.Scope) error {
	out.Inmem = (*v1alpha2.InmemSpec)(unsafe.Pointer(in.Inmem))
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(v1alpha2.EtcdSpec)
		if err := Convert_v1alpha1_EtcdSpec_To_v1alpha2_EtcdSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Etcd = nil
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = new(v1alpha2.GcsSpec)
		if err := Convert_v1alpha1_GcsSpec_To_v1alpha2_GcsSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Gcs = nil
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(v1alpha2.S3Spec)
		if err := Convert_v1alpha1_S3Spec_To_v1alpha2_S3Spec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.S3 = nil
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = new(v1alpha2.AzureSpec)
		if err := Convert_v1alpha1_AzureSpec_To_v1alpha2_AzureSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Azure = nil
	}
	if in.PostgreSQL != nil {
		in, out := &in.PostgreSQL, &out.PostgreSQL
		*out = new(v1alpha2.PostgreSQLSpec)
		if err := Convert_v1alpha1_PostgreSQLSpec_To_v1alpha2_PostgreSQLSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PostgreSQL = nil
	}
	if in.MySQL != nil {
		in, out := &in.MySQL, &out.MySQL
		*out = new(v1alpha2.MySQLSpec)
		if err := Convert_v1alpha1_MySQLSpec_To_v1alpha2_MySQLSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.MySQL = nil
	}
	out.File = (*v1alpha2.FileSpec)(unsafe.Pointer(in.File))
	if in.DynamoDB != nil {
		in, out := &in.DynamoDB, &out.DynamoDB
		*out = new(v1alpha2.DynamoDBSpec)
		if err := Convert_v1alpha1_DynamoDBSpec_To_v1alpha2_DynamoDBSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DynamoDB = nil
	}
	if in.Swift != nil {
		in, out := &in.Swift, &out.Swift
		*out = new(v1alpha2.SwiftSpec)
		if err := Convert_v1alpha1_SwiftSpec_To_v1alpha2_SwiftSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Swift = nil
	}
	if in.Consul != nil {
		in, out := &in.Consul, &out.Consul
		*out = new(v1alpha2.ConsulSpec)
		if err := Convert_v1alpha1_ConsulSpec_To_v1alpha2_ConsulSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Consul = nil
	}
	if in.Raft != nil {
		in, out := &in.Raft, &out.Raft
		*out = new(v1alpha2.RaftSpec)
		if err := Convert_v1alpha1_RaftSpec_To_v1alpha2_RaftSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Raft = nil
	}
	return nil
}

// Convert_v1alpha1_BackendStorageSpec_To_v1alpha2_BackendStorageSpec is an autogenerated conversion function.
func Convert_v1alpha1_BackendStorageSpec_To_v1alpha2_BackendStorageSpec(in *BackendStorageSpec, out *v1alpha2.BackendStorageSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_BackendStorageSpec_To_v1alpha2_BackendStorageSpec(in, out, s)
}

func autoConvert_v1alpha2_BackendStorageSpec_To_v1alpha1_BackendStorageSpec(in *v1alpha2.BackendStorageSpec, out *BackendStorageSpec, s conversion.Scope) error {
	out.Inmem = (*InmemSpec)(unsafe.Pointer(in.Inmem))
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = new(EtcdSpec)
		if err := Convert_v1alpha2_EtcdSpec_To_v1alpha1_EtcdSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Etcd = nil
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = new(GcsSpec)
		if err := Convert_v1alpha2_GcsSpec_To_v1alpha1_GcsSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Gcs = nil
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(S3Spec)
		if err := Convert_v1alpha2_S3Spec_To_v1alpha1_S3Spec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.S3 = nil
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = new(AzureSpec)
		if err := Convert_v1alpha2_AzureSpec_To_v1alpha1_AzureSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Azure = nil
	}
	if in.PostgreSQL != nil {
		in, out := &in.PostgreSQL, &out.PostgreSQL
		*out = new(PostgreSQLSpec)
		if err := Convert_v1alpha2_PostgreSQLSpec_To_v1alpha1_PostgreSQLSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PostgreSQL = nil
	}
	if in.MySQL != nil {
		in, out := &in.MySQL, &out.MySQL
		*out = new(MySQLSpec)
		if err := Convert_v1alpha2_MySQLSpec_To_v1alpha1_MySQLSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.MySQL = nil
	}
	out.File = (*FileSpec)(unsafe.Pointer(in.File))
	if in.DynamoDB != nil {
		in, out := &in.DynamoDB, &out.DynamoDB
		*out = new(DynamoDBSpec)
		if err := Convert_v1alpha2_DynamoDBSpec_To_v1alpha1_DynamoDBSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DynamoDB = nil
	}
	if in.Swift != nil {
		in, out := &in.Swift, &out.Swift
		*out = new(SwiftSpec)
		if err := Convert_v1alpha2_SwiftSpec_To_v1alpha1_SwiftSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Swift = nil
	}
	if in.Consul != nil {
		in, out := &in.Consul, &out.Consul
		*out = new(ConsulSpec)
		if err := Convert_v1alpha2_ConsulSpec_To_v1alpha1_ConsulSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Consul = nil
	}
	if in.Raft != nil {
		in, out := &in.Raft, &out.Raft
		*out = new(RaftSpec)
		if err := Convert_v1alpha2_RaftSpec_To_v1alpha1_RaftSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Raft = nil
	}
	return nil
}

// Convert_v1alpha2_BackendStorageSpec_To_v1alpha1_BackendStorageSpec is an autogenerated conversion function.
func Convert_v1alpha2_BackendStorageSpec_To_v1alpha1_BackendStorageSpec(in *v1alpha2.BackendStorageSpec, out *BackendStorageSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_BackendStorageSpec_To_v1alpha1_BackendStorageSpec(in, out, s)
}

func autoConvert_v1alpha1_ConsulSpec_To_v1alpha2_ConsulSpec(in *ConsulSpec, out *v1alpha2.ConsulSpec, s conversion.Scope) error {
	out.Address = in.Address
	out.CheckTimeout = in.CheckTimeout
	out.ConsistencyMode = in.ConsistencyMode
	out.DisableRegistration = in.DisableRegistration
	out.MaxParallel = in.MaxParallel
	out.Path = in.Path
	out.Scheme = in.Scheme
	out.Service = in.Service
	out.ServiceTags = in.ServiceTags
	out.ServiceAddress = in.ServiceAddress
	out.ACLTokenSecretName = in.ACLTokenSecretName
	out.SessionTTL = in.SessionTTL
	out.LockWaitTime = in.LockWaitTime
	// WARNING: in.TLSSecretName requires manual conversion: does not exist in peer-type
	out.TLSMinVersion = in.TLSMinVersion
	out.TLSSkipVerify = in.TLSSkipVerify
	return nil
}

func autoConvert_v1alpha2_ConsulSpec_To_v1alpha1_ConsulSpec(in *v1alpha2.ConsulSpec, out *ConsulSpec, s conversion.Scope) error {
	out.Address = in.Address
	out.CheckTimeout = in.CheckTimeout
	out.ConsistencyMode = in.ConsistencyMode
	out.DisableRegistration = in.DisableRegistration
	out.MaxParallel = in.MaxParallel
	out.Path = in.Path
	out.Scheme = in.Scheme
	out.Service = in.Service
	out.ServiceTags = in.ServiceTags
	out.ServiceAddress = in.ServiceAddress
	out.ACLTokenSecretName = in.ACLTokenSecretName
	out.SessionTTL = in.SessionTTL
	out.LockWaitTime = in.LockWaitTime
	// WARNING: in.TLSSecretRef requires manual conversion: does not exist in peer-type
	out.TLSMinVersion = in.TLSMinVersion
	out.TLSSkipVerify = in.TLSSkipVerify
	return nil
}

func autoConvert_v1alpha1_DynamoDBSpec_To_v1alpha2_DynamoDBSpec(in *DynamoDBSpec, out *v1alpha2.DynamoDBSpec, s conversion.Scope) error {
	out.Endpoint = in.Endpoint
	out.Region = in.Region
	out.HaEnabled = in.HaEnabled
	out.ReadCapacity = in.ReadCapacity
	out.WriteCapacity = in.WriteCapacity
	out.Table = in.Table
	// WARNING: in.CredentialSecret requires manual conversion: does not exist in peer-type
	// WARNING: in.SessionTokenSecret requires manual conversion: does not exist in peer-type
	out.MaxParallel = in.MaxParallel
	return nil
}

func autoConvert_v1alpha2_DynamoDBSpec_To_v1alpha1_DynamoDBSpec(in *v1alpha2.DynamoDBSpec, out *DynamoDBSpec, s conversion.Scope) error {
	out.Endpoint = in.Endpoint
	out.Region = in.Region
	out.HaEnabled = in.HaEnabled
	out.ReadCapacity = in.ReadCapacity
	out.WriteCapacity = in.WriteCapacity
	out.Table = in.Table
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	out.MaxParallel = in.MaxParallel
	return nil
}

func autoConvert_v1alpha1_EtcdSpec_To_v1alpha2_EtcdSpec(in *EtcdSpec, out *v1alpha2.EtcdSpec, s conversion.Scope) error {
	out.Address = in.Address
	out.EtcdApi = in.EtcdApi
	out.HAEnable = in.HAEnable
	out.Path = in.Path
	out.Sync = in.Sync
	out.DiscoverySrv = in.DiscoverySrv
	// WARNING: in.CredentialSecretName requires manual conversion: does not exist in peer-type
	// WARNING: in.TLSSecretName requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha2_EtcdSpec_To_v1alpha1_EtcdSpec(in *v1alpha2.EtcdSpec, out *EtcdSpec, s conversion.Scope) error {
	out.Address = in.Address
	out.EtcdApi = in.EtcdApi
	out.HAEnable = in.HAEnable
	out.Path = in.Path
	out.Sync = in.Sync
	out.DiscoverySrv = in.DiscoverySrv
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	// WARNING: in.TLSSecretRef requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_FileSpec_To_v1alpha2_FileSpec(in *FileSpec, out *v1alpha2.FileSpec, s conversion.Scope) error {
	out.Path = in.Path
	out.VolumeClaimTemplate = in.VolumeClaimTemplate
	return nil
}

// Convert_v1alpha1_FileSpec_To_v1alpha2_FileSpec is an autogenerated conversion function.
func Convert_v1alpha1_FileSpec_To_v1alpha2_FileSpec(in *FileSpec, out *v1alpha2.FileSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_FileSpec_To_v1alpha2_FileSpec(in, out, s)
}

func autoConvert_v1alpha2_FileSpec_To_v1alpha1_FileSpec(in *v1alpha2.FileSpec, out *FileSpec, s conversion.Scope) error {
	out.Path = in.Path
	out.VolumeClaimTemplate = in.VolumeClaimTemplate
	return nil
}

// Convert_v1alpha2_FileSpec_To_v1alpha1_FileSpec is an autogenerated conversion function.
func Convert_v1alpha2_FileSpec_To_v1alpha1_FileSpec(in *v1alpha2.FileSpec, out *FileSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_FileSpec_To_v1alpha1_FileSpec(in, out, s)
}

func autoConvert_v1alpha1_GcsSpec_To_v1alpha2_GcsSpec(in *GcsSpec, out *v1alpha2.GcsSpec, s conversion.Scope) error {
	out.Bucket = in.Bucket
	out.ChunkSize = in.ChunkSize
	out.MaxParallel = in.MaxParallel
	out.HAEnabled = in.HAEnabled
	// WARNING: in.CredentialSecret requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha2_GcsSpec_To_v1alpha1_GcsSpec(in *v1alpha2.GcsSpec, out *GcsSpec, s conversion.Scope) error {
	out.Bucket = in.Bucket
	out.ChunkSize = in.ChunkSize
	out.MaxParallel = in.MaxParallel
	out.HAEnabled = in.HAEnabled
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_GoogleKmsGcsSpec_To_v1alpha2_GoogleKmsGcsSpec(in *GoogleKmsGcsSpec, out *v1alpha2.GoogleKmsGcsSpec, s conversion.Scope) error {
	out.KmsCryptoKey = in.KmsCryptoKey
	out.KmsKeyRing = in.KmsKeyRing
	out.KmsLocation = in.KmsLocation
	out.KmsProject = in.KmsProject
	out.Bucket = in.Bucket
	// WARNING: in.CredentialSecret requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha2_GoogleKmsGcsSpec_To_v1alpha1_GoogleKmsGcsSpec(in *v1alpha2.GoogleKmsGcsSpec, out *GoogleKmsGcsSpec, s conversion.Scope) error {
	out.KmsCryptoKey = in.KmsCryptoKey
	out.KmsKeyRing = in.KmsKeyRing
	out.KmsLocation = in.KmsLocation
	out.KmsProject = in.KmsProject
	out.Bucket = in.Bucket
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_InmemSpec_To_v1alpha2_InmemSpec(in *InmemSpec, out *v1alpha2.InmemSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_InmemSpec_To_v1alpha2_InmemSpec is an autogenerated conversion function.
func Convert_v1alpha1_InmemSpec_To_v1alpha2_InmemSpec(in *InmemSpec, out *v1alpha2.InmemSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_InmemSpec_To_v1alpha2_InmemSpec(in, out, s)
}

func autoConvert_v1alpha2_InmemSpec_To_v1alpha1_InmemSpec(in *v1alpha2.InmemSpec, out *InmemSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha2_InmemSpec_To_v1alpha1_InmemSpec is an autogenerated conversion function.
func Convert_v1alpha2_InmemSpec_To_v1alpha1_InmemSpec(in *v1alpha2.InmemSpec, out *InmemSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_InmemSpec_To_v1alpha1_InmemSpec(in, out, s)
}

func autoConvert_v1alpha1_KubernetesSecretSpec_To_v1alpha2_KubernetesSecretSpec(in *KubernetesSecretSpec, out *v1alpha2.KubernetesSecretSpec, s conversion.Scope) error {
	out.SecretName = in.SecretName
	return nil
}

// Convert_v1alpha1_KubernetesSecretSpec_To_v1alpha2_KubernetesSecretSpec is an autogenerated conversion function.
func Convert_v1alpha1_KubernetesSecretSpec_To_v1alpha2_KubernetesSecretSpec(in *KubernetesSecretSpec, out *v1alpha2.KubernetesSecretSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubernetesSecretSpec_To_v1alpha2_KubernetesSecretSpec(in, out, s)
}

func autoConvert_v1alpha2_KubernetesSecretSpec_To_v1alpha1_KubernetesSecretSpec(in *v1alpha2.KubernetesSecretSpec, out *KubernetesSecretSpec, s conversion.Scope) error {
	out.SecretName = in.SecretName
	return nil
}

// Convert_v1alpha2_KubernetesSecretSpec_To_v1alpha1_KubernetesSecretSpec is an autogenerated conversion function.
func Convert_v1alpha2_KubernetesSecretSpec_To_v1alpha1_KubernetesSecretSpec(in *v1alpha2.KubernetesSecretSpec, out *KubernetesSecretSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_KubernetesSecretSpec_To_v1alpha1_KubernetesSecretSpec(in, out, s)
}

func autoConvert_v1alpha1_ModeSpec_To_v1alpha2_ModeSpec(in *ModeSpec, out *v1alpha2.ModeSpec, s conversion.Scope) error {
	out.KubernetesSecret = (*v1alpha2.KubernetesSecretSpec)(unsafe.Pointer(in.KubernetesSecret))
	if in.GoogleKmsGcs != nil {
		in, out := &in.GoogleKmsGcs, &out.GoogleKmsGcs
		*out = new(v1alpha2.GoogleKmsGcsSpec)
		if err := Convert_v1alpha1_GoogleKmsGcsSpec_To_v1alpha2_GoogleKmsGcsSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GoogleKmsGcs = nil
	}
	if in.AwsKmsSsm != nil {
		in, out := &in.AwsKmsSsm, &out.AwsKmsSsm
		*out = new(v1alpha2.AwsKmsSsmSpec)
		if err := Convert_v1alpha1_AwsKmsSsmSpec_To_v1alpha2_AwsKmsSsmSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AwsKmsSsm = nil
	}
	if in.AzureKeyVault != nil {
		in, out := &in.AzureKeyVault, &out.AzureKeyVault
		*out = new(v1alpha2.AzureKeyVault)
		if err := Convert_v1alpha1_AzureKeyVault_To_v1alpha2_AzureKeyVault(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AzureKeyVault = nil
	}
	return nil
}

// Convert_v1alpha1_ModeSpec_To_v1alpha2_ModeSpec is an autogenerated conversion function.
func Convert_v1alpha1_ModeSpec_To_v1alpha2_ModeSpec(in *ModeSpec, out *v1alpha2.ModeSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ModeSpec_To_v1alpha2_ModeSpec(in, out, s)
}

func autoConvert_v1alpha2_ModeSpec_To_v1alpha1_ModeSpec(in *v1alpha2.ModeSpec, out *ModeSpec, s conversion.Scope) error {
	out.KubernetesSecret = (*KubernetesSecretSpec)(unsafe.Pointer(in.KubernetesSecret))
	if in.GoogleKmsGcs != nil {
		in, out := &in.GoogleKmsGcs, &out.GoogleKmsGcs
		*out = new(GoogleKmsGcsSpec)
		if err := Convert_v1alpha2_GoogleKmsGcsSpec_To_v1alpha1_GoogleKmsGcsSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GoogleKmsGcs = nil
	}
	if in.AwsKmsSsm != nil {
		in, out := &in.AwsKmsSsm, &out.AwsKmsSsm
		*out = new(AwsKmsSsmSpec)
		if err := Convert_v1alpha2_AwsKmsSsmSpec_To_v1alpha1_AwsKmsSsmSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AwsKmsSsm = nil
	}
	if in.AzureKeyVault != nil {
		in, out := &in.AzureKeyVault, &out.AzureKeyVault
		*out = new(AzureKeyVault)
		if err := Convert_v1alpha2_AzureKeyVault_To_v1alpha1_AzureKeyVault(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.AzureKeyVault = nil
	}
	return nil
}

// Convert_v1alpha2_ModeSpec_To_v1alpha1_ModeSpec is an autogenerated conversion function.
func Convert_v1alpha2_ModeSpec_To_v1alpha1_ModeSpec(in *v1alpha2.ModeSpec, out *ModeSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_ModeSpec_To_v1alpha1_ModeSpec(in, out, s)
}

func autoConvert_v1alpha1_MySQLSpec_To_v1alpha2_MySQLSpec(in *MySQLSpec, out *v1alpha2.MySQLSpec, s conversion.Scope) error {
	out.Address = in.Address
	out.Database = in.Database
	out.Table = in.Table
	// WARNING: in.UserCredentialSecret requires manual conversion: does not exist in peer-type
	// WARNING: in.TLSCASecret requires manual conversion: does not exist in peer-type
	out.MaxParallel = in.MaxParallel
	return nil
}

func autoConvert_v1alpha2_MySQLSpec_To_v1alpha1_MySQLSpec(in *v1alpha2.MySQLSpec, out *MySQLSpec, s conversion.Scope) error {
	out.Address = in.Address
	out.Database = in.Database
	out.Table = in.Table
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	// WARNING: in.TLSSecretRef requires manual conversion: does not exist in peer-type
	out.MaxParallel = in.MaxParallel
	// WARNING: in.DatabaseRef requires manual conversion: does not exist in peer-type
	// WARNING: in.PlaintextCredentialTransmission requires manual conversion: does not exist in peer-type
	// WARNING: in.MaxIdleConnection requires manual conversion: does not exist in peer-type
	// WARNING: in.MaxConnectionLifetime requires manual conversion: does not exist in peer-type
	// WARNING: in.HAEnabled requires manual conversion: does not exist in peer-type
	// WARNING: in.LockTable requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_NamedServiceTemplateSpec_To_v1alpha2_NamedServiceTemplateSpec(in *NamedServiceTemplateSpec, out *v1alpha2.NamedServiceTemplateSpec, s conversion.Scope) error {
	out.Alias = v1alpha2.ServiceAlias(in.Alias)
	out.ServiceTemplateSpec = in.ServiceTemplateSpec
	return nil
}

// Convert_v1alpha1_NamedServiceTemplateSpec_To_v1alpha2_NamedServiceTemplateSpec is an autogenerated conversion function.
func Convert_v1alpha1_NamedServiceTemplateSpec_To_v1alpha2_NamedServiceTemplateSpec(in *NamedServiceTemplateSpec, out *v1alpha2.NamedServiceTemplateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_NamedServiceTemplateSpec_To_v1alpha2_NamedServiceTemplateSpec(in, out, s)
}

func autoConvert_v1alpha2_NamedServiceTemplateSpec_To_v1alpha1_NamedServiceTemplateSpec(in *v1alpha2.NamedServiceTemplateSpec, out *NamedServiceTemplateSpec, s conversion.Scope) error {
	out.Alias = ServiceAlias(in.Alias)
	out.ServiceTemplateSpec = in.ServiceTemplateSpec
	return nil
}

// Convert_v1alpha2_NamedServiceTemplateSpec_To_v1alpha1_NamedServiceTemplateSpec is an autogenerated conversion function.
func Convert_v1alpha2_NamedServiceTemplateSpec_To_v1alpha1_NamedServiceTemplateSpec(in *v1alpha2.NamedServiceTemplateSpec, out *NamedServiceTemplateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_NamedServiceTemplateSpec_To_v1alpha1_NamedServiceTemplateSpec(in, out, s)
}

func autoConvert_v1alpha1_PostgreSQLSpec_To_v1alpha2_PostgreSQLSpec(in *PostgreSQLSpec, out *v1alpha2.PostgreSQLSpec, s conversion.Scope) error {
	// WARNING: in.ConnectionURLSecret requires manual conversion: does not exist in peer-type
	out.Table = in.Table
	out.MaxParallel = in.MaxParallel
	return nil
}

func autoConvert_v1alpha2_PostgreSQLSpec_To_v1alpha1_PostgreSQLSpec(in *v1alpha2.PostgreSQLSpec, out *PostgreSQLSpec, s conversion.Scope) error {
	// WARNING: in.Address requires manual conversion: does not exist in peer-type
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	// WARNING: in.DatabaseRef requires manual conversion: does not exist in peer-type
	// WARNING: in.SSLMode requires manual conversion: does not exist in peer-type
	out.Table = in.Table
	out.MaxParallel = in.MaxParallel
	// WARNING: in.MaxIdleConnection requires manual conversion: does not exist in peer-type
	// WARNING: in.HAEnabled requires manual conversion: does not exist in peer-type
	// WARNING: in.HATable requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_RaftSpec_To_v1alpha2_RaftSpec(in *RaftSpec, out *v1alpha2.RaftSpec, s conversion.Scope) error {
	// WARNING: in.Path requires manual conversion: does not exist in peer-type
	out.PerformanceMultiplier = in.PerformanceMultiplier
	out.TrailingLogs = (*int64)(unsafe.Pointer(in.TrailingLogs))
	out.SnapshotThreshold = (*int64)(unsafe.Pointer(in.SnapshotThreshold))
	out.MaxEntrySize = (*int64)(unsafe.Pointer(in.MaxEntrySize))
	out.AutopilotReconcileInterval = in.AutopilotReconcileInterval
	out.Storage = (*v1.PersistentVolumeClaimSpec)(unsafe.Pointer(in.Storage))
	return nil
}

func autoConvert_v1alpha2_RaftSpec_To_v1alpha1_RaftSpec(in *v1alpha2.RaftSpec, out *RaftSpec, s conversion.Scope) error {
	out.PerformanceMultiplier = in.PerformanceMultiplier
	out.TrailingLogs = (*int64)(unsafe.Pointer(in.TrailingLogs))
	out.SnapshotThreshold = (*int64)(unsafe.Pointer(in.SnapshotThreshold))
	out.MaxEntrySize = (*int64)(unsafe.Pointer(in.MaxEntrySize))
	out.AutopilotReconcileInterval = in.AutopilotReconcileInterval
	out.Storage = (*v1.PersistentVolumeClaimSpec)(unsafe.Pointer(in.Storage))
	return nil
}

// Convert_v1alpha2_RaftSpec_To_v1alpha1_RaftSpec is an autogenerated conversion function.
func Convert_v1alpha2_RaftSpec_To_v1alpha1_RaftSpec(in *v1alpha2.RaftSpec, out *RaftSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_RaftSpec_To_v1alpha1_RaftSpec(in, out, s)
}

func autoConvert_v1alpha1_S3Spec_To_v1alpha2_S3Spec(in *S3Spec, out *v1alpha2.S3Spec, s conversion.Scope) error {
	out.Bucket = in.Bucket
	out.Endpoint = in.Endpoint
	out.Region = in.Region
	// WARNING: in.CredentialSecret requires manual conversion: does not exist in peer-type
	// WARNING: in.SessionTokenSecret requires manual conversion: does not exist in peer-type
	out.MaxParallel = in.MaxParallel
	out.ForcePathStyle = in.ForcePathStyle
	out.DisableSSL = in.DisableSSL
	return nil
}

func autoConvert_v1alpha2_S3Spec_To_v1alpha1_S3Spec(in *v1alpha2.S3Spec, out *S3Spec, s conversion.Scope) error {
	out.Bucket = in.Bucket
	out.Endpoint = in.Endpoint
	out.Region = in.Region
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	out.MaxParallel = in.MaxParallel
	out.ForcePathStyle = in.ForcePathStyle
	out.DisableSSL = in.DisableSSL
	return nil
}

func autoConvert_v1alpha1_SecretEngineNamespaces_To_v1alpha2_SecretEngineNamespaces(in *SecretEngineNamespaces, out *v1alpha2.SecretEngineNamespaces, s conversion.Scope) error {
	out.From = (*v1alpha2.FromNamespaces)(unsafe.Pointer(in.From))
	out.Selector = (*metav1.LabelSelector)(unsafe.Pointer(in.Selector))
	return nil
}

// Convert_v1alpha1_SecretEngineNamespaces_To_v1alpha2_SecretEngineNamespaces is an autogenerated conversion function.
func Convert_v1alpha1_SecretEngineNamespaces_To_v1alpha2_SecretEngineNamespaces(in *SecretEngineNamespaces, out *v1alpha2.SecretEngineNamespaces, s conversion.Scope) error {
	return autoConvert_v1alpha1_SecretEngineNamespaces_To_v1alpha2_SecretEngineNamespaces(in, out, s)
}

func autoConvert_v1alpha2_SecretEngineNamespaces_To_v1alpha1_SecretEngineNamespaces(in *v1alpha2.SecretEngineNamespaces, out *SecretEngineNamespaces, s conversion.Scope) error {
	out.From = (*FromNamespaces)(unsafe.Pointer(in.From))
	out.Selector = (*metav1.LabelSelector)(unsafe.Pointer(in.Selector))
	return nil
}

// Convert_v1alpha2_SecretEngineNamespaces_To_v1alpha1_SecretEngineNamespaces is an autogenerated conversion function.
func Convert_v1alpha2_SecretEngineNamespaces_To_v1alpha1_SecretEngineNamespaces(in *v1alpha2.SecretEngineNamespaces, out *SecretEngineNamespaces, s conversion.Scope) error {
	return autoConvert_v1alpha2_SecretEngineNamespaces_To_v1alpha1_SecretEngineNamespaces(in, out, s)
}

func autoConvert_v1alpha1_SwiftSpec_To_v1alpha2_SwiftSpec(in *SwiftSpec, out *v1alpha2.SwiftSpec, s conversion.Scope) error {
	out.AuthURL = in.AuthURL
	out.Container = in.Container
	// WARNING: in.CredentialSecret requires manual conversion: does not exist in peer-type
	out.Tenant = in.Tenant
	out.Region = in.Region
	out.TenantID = in.TenantID
	out.Domain = in.Domain
	out.ProjectDomain = in.ProjectDomain
	out.TrustID = in.TrustID
	out.StorageURL = in.StorageURL
	// WARNING: in.AuthTokenSecret requires manual conversion: does not exist in peer-type
	out.MaxParallel = in.MaxParallel
	return nil
}

func autoConvert_v1alpha2_SwiftSpec_To_v1alpha1_SwiftSpec(in *v1alpha2.SwiftSpec, out *SwiftSpec, s conversion.Scope) error {
	out.AuthURL = in.AuthURL
	out.Container = in.Container
	// WARNING: in.CredentialSecretRef requires manual conversion: does not exist in peer-type
	out.Tenant = in.Tenant
	out.Region = in.Region
	out.TenantID = in.TenantID
	out.Domain = in.Domain
	out.ProjectDomain = in.ProjectDomain
	out.TrustID = in.TrustID
	out.StorageURL = in.StorageURL
	out.MaxParallel = in.MaxParallel
	return nil
}

func autoConvert_v1alpha1_TLSPolicy_To_v1alpha2_TLSPolicy(in *TLSPolicy, out *v1alpha2.TLSPolicy, s conversion.Scope) error {
	out.TLSSecret = in.TLSSecret
	out.CABundle = *(*[]byte)(unsafe.Pointer(&in.CABundle))
	return nil
}

// Convert_v1alpha1_TLSPolicy_To_v1alpha2_TLSPolicy is an autogenerated conversion function.
func Convert_v1alpha1_TLSPolicy_To_v1alpha2_TLSPolicy(in *TLSPolicy, out *v1alpha2.TLSPolicy, s conversion.Scope) error {
	return autoConvert_v1alpha1_TLSPolicy_To_v1alpha2_TLSPolicy(in, out, s)
}

func autoConvert_v1alpha2_TLSPolicy_To_v1alpha1_TLSPolicy(in *v1alpha2.TLSPolicy, out *TLSPolicy, s conversion.Scope) error {
	out.TLSSecret = in.TLSSecret
	out.CABundle = *(*[]byte)(unsafe.Pointer(&in.CABundle))
	return nil
}

// Convert_v1alpha2_TLSPolicy_To_v1alpha1_TLSPolicy is an autogenerated conversion function.
func Convert_v1alpha2_TLSPolicy_To_v1alpha1_TLSPolicy(in *v1alpha2.TLSPolicy, out *TLSPolicy, s conversion.Scope) error {
	return autoConvert_v1alpha2_TLSPolicy_To_v1alpha1_TLSPolicy(in, out, s)
}

func autoConvert_v1alpha1_UnsealerSpec_To_v1alpha2_UnsealerSpec(in *UnsealerSpec, out *v1alpha2.UnsealerSpec, s conversion.Scope) error {
	out.SecretShares = in.SecretShares
	out.SecretThreshold = in.SecretThreshold
	out.RetryPeriodSeconds = time.Duration(in.RetryPeriodSeconds)
	out.OverwriteExisting = in.OverwriteExisting
	out.StoreRootToken = in.StoreRootToken
	if err := Convert_v1alpha1_ModeSpec_To_v1alpha2_ModeSpec(&in.Mode, &out.Mode, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_UnsealerSpec_To_v1alpha2_UnsealerSpec is an autogenerated conversion function.
func Convert_v1alpha1_UnsealerSpec_To_v1alpha2_UnsealerSpec(in *UnsealerSpec, out *v1alpha2.UnsealerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_UnsealerSpec_To_v1alpha2_UnsealerSpec(in, out, s)
}

func autoConvert_v1alpha2_UnsealerSpec_To_v1alpha1_UnsealerSpec(in *v1alpha2.UnsealerSpec, out *UnsealerSpec, s conversion.Scope) error {
	out.SecretShares = in.SecretShares
	out.SecretThreshold = in.SecretThreshold
	out.RetryPeriodSeconds = time.Duration(in.RetryPeriodSeconds)
	out.OverwriteExisting = in.OverwriteExisting
	out.StoreRootToken = in.StoreRootToken
	if err := Convert_v1alpha2_ModeSpec_To_v1alpha1_ModeSpec(&in.Mode, &out.Mode, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_UnsealerSpec_To_v1alpha1_UnsealerSpec is an autogenerated conversion function.
func Convert_v1alpha2_UnsealerSpec_To_v1alpha1_UnsealerSpec(in *v1alpha2.UnsealerSpec, out *UnsealerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_UnsealerSpec_To_v1alpha1_UnsealerSpec(in, out, s)
}

func autoConvert_v1alpha1_VaultServer_To_v1alpha2_VaultServer(in *VaultServer, out *v1alpha2.VaultServer, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_VaultServerSpec_To_v1alpha2_VaultServerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_VaultServerStatus_To_v1alpha2_VaultServerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_VaultServer_To_v1alpha2_VaultServer is an autogenerated conversion function.
func Convert_v1alpha1_VaultServer_To_v1alpha2_VaultServer(in *VaultServer, out *v1alpha2.VaultServer, s conversion.Scope) error {
	return autoConvert_v1alpha1_VaultServer_To_v1alpha2_VaultServer(in, out, s)
}

func autoConvert_v1alpha2_VaultServer_To_v1alpha1_VaultServer(in *v1alpha2.VaultServer, out *VaultServer, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha2_VaultServerSpec_To_v1alpha1_VaultServerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha2_VaultServerStatus_To_v1alpha1_VaultServerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_VaultServer_To_v1alpha1_VaultServer is an autogenerated conversion function.
func Convert_v1alpha2_VaultServer_To_v1alpha1_VaultServer(in *v1alpha2.VaultServer, out *VaultServer, s conversion.Scope) error {
	return autoConvert_v1alpha2_VaultServer_To_v1alpha1_VaultServer(in, out, s)
}

func autoConvert_v1alpha1_VaultServerList_To_v1alpha2_VaultServerList(in *VaultServerList, out *v1alpha2.VaultServerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1alpha2.VaultServer, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_VaultServer_To_v1alpha2_VaultServer(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_VaultServerList_To_v1alpha2_VaultServerList is an autogenerated conversion function.
func Convert_v1alpha1_VaultServerList_To_v1alpha2_VaultServerList(in *VaultServerList, out *v1alpha2.VaultServerList, s conversion.Scope) error {
	return autoConvert_v1alpha1_VaultServerList_To_v1alpha2_VaultServerList(in, out, s)
}

func autoConvert_v1alpha2_VaultServerList_To_v1alpha1_VaultServerList(in *v1alpha2.VaultServerList, out *VaultServerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VaultServer, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_VaultServer_To_v1alpha1_VaultServer(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha2_VaultServerList_To_v1alpha1_VaultServerList is an autogenerated conversion function.
func Convert_v1alpha2_VaultServerList_To_v1alpha1_VaultServerList(in *v1alpha2.VaultServerList, out *VaultServerList, s conversion.Scope) error {
	return autoConvert_v1alpha2_VaultServerList_To_v1alpha1_VaultServerList(in, out, s)
}

func autoConvert_v1alpha1_VaultServerSpec_To_v1alpha2_VaultServerSpec(in *VaultServerSpec, out *v1alpha2.VaultServerSpec, s conversion.Scope) error {
	out.Version = in.Version
	out.Replicas = (*int32)(unsafe.Pointer(in.Replicas))
	out.ConfigSecret = (*v1.LocalObjectReference)(unsafe.Pointer(in.ConfigSecret))
	out.DataSources = *(*[]v1.VolumeSource)(unsafe.Pointer(&in.DataSources))
	out.TLS = (*apiv1.TLSConfig)(unsafe.Pointer(in.TLS))
	if err := Convert_v1alpha1_BackendStorageSpec_To_v1alpha2_BackendStorageSpec(&in.Backend, &out.Backend, s); err != nil {
		return err
	}
	if in.Unsealer != nil {
		in, out := &in.Unsealer, &out.Unsealer
		*out = new(v1alpha2.UnsealerSpec)
		if err := Convert_v1alpha1_UnsealerSpec_To_v1alpha2_UnsealerSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Unsealer = nil
	}
	if in.AuthMethods != nil {
		in, out := &in.AuthMethods, &out.AuthMethods
		*out = make([]v1alpha2.AuthMethod, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_AuthMethod_To_v1alpha2_AuthMethod(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.AuthMethods = nil
	}
	out.Monitor = (*monitoringagentapiapiv1.AgentSpec)(unsafe.Pointer(in.Monitor))
	out.PodTemplate = in.PodTemplate
	out.ServiceTemplates = *(*[]v1alpha2.NamedServiceTemplateSpec)(unsafe.Pointer(&in.ServiceTemplates))
	out.Halted = in.Halted
	out.TerminationPolicy = v1alpha2.TerminationPolicy(in.TerminationPolicy)
	out.AllowedSecretEngines = (*v1alpha2.AllowedSecretEngines)(unsafe.Pointer(in.AllowedSecretEngines))
	return nil
}

// Convert_v1alpha1_VaultServerSpec_To_v1alpha2_VaultServerSpec is an autogenerated conversion function.
func Convert_v1alpha1_VaultServerSpec_To_v1alpha2_VaultServerSpec(in *VaultServerSpec, out *v1alpha2.VaultServerSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_VaultServerSpec_To_v1alpha2_VaultServerSpec(in, out, s)
}

func autoConvert_v1alpha2_VaultServerSpec_To_v1alpha1_VaultServerSpec(in *v1alpha2.VaultServerSpec, out *VaultServerSpec, s conversion.Scope) error {
	out.Version = in.Version
	out.Replicas = (*int32)(unsafe.Pointer(in.Replicas))
	out.ConfigSecret = (*v1.LocalObjectReference)(unsafe.Pointer(in.ConfigSecret))
	out.DataSources = *(*[]v1.VolumeSource)(unsafe.Pointer(&in.DataSources))
	out.TLS = (*apiv1.TLSConfig)(unsafe.Pointer(in.TLS))
	if err := Convert_v1alpha2_BackendStorageSpec_To_v1alpha1_BackendStorageSpec(&in.Backend, &out.Backend, s); err != nil {
		return err
	}
	if in.Unsealer != nil {
		in, out := &in.Unsealer, &out.Unsealer
		*out = new(UnsealerSpec)
		if err := Convert_v1alpha2_UnsealerSpec_To_v1alpha1_UnsealerSpec(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Unsealer = nil
	}
	if in.AuthMethods != nil {
		in, out := &in.AuthMethods, &out.AuthMethods
		*out = make([]AuthMethod, len(*in))
		for i := range *in {
			if err := Convert_v1alpha2_AuthMethod_To_v1alpha1_AuthMethod(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.AuthMethods = nil
	}
	out.Monitor = (*monitoringagentapiapiv1.AgentSpec)(unsafe.Pointer(in.Monitor))
	out.PodTemplate = in.PodTemplate
	out.ServiceTemplates = *(*[]NamedServiceTemplateSpec)(unsafe.Pointer(&in.ServiceTemplates))
	out.Halted = in.Halted
	out.TerminationPolicy = TerminationPolicy(in.TerminationPolicy)
	out.AllowedSecretEngines = (*AllowedSecretEngines)(unsafe.Pointer(in.AllowedSecretEngines))
	// WARNING: in.HealthChecker requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_VaultServerStatus_To_v1alpha2_VaultServerStatus(in *VaultServerStatus, out *v1alpha2.VaultServerStatus, s conversion.Scope) error {
	out.ObservedGeneration = in.ObservedGeneration
	out.Phase = v1alpha2.VaultServerPhase(in.Phase)
	out.Initialized = in.Initialized
	out.ServiceName = in.ServiceName
	out.ClientPort = in.ClientPort
	if err := Convert_v1alpha1_VaultStatus_To_v1alpha2_VaultStatus(&in.VaultStatus, &out.VaultStatus, s); err != nil {
		return err
	}
	out.UpdatedNodes = *(*[]string)(unsafe.Pointer(&in.UpdatedNodes))
	out.Conditions = *(*[]apiv1.Condition)(unsafe.Pointer(&in.Conditions))
	out.AuthMethodStatus = *(*[]v1alpha2.AuthMethodStatus)(unsafe.Pointer(&in.AuthMethodStatus))
	return nil
}

// Convert_v1alpha1_VaultServerStatus_To_v1alpha2_VaultServerStatus is an autogenerated conversion function.
func Convert_v1alpha1_VaultServerStatus_To_v1alpha2_VaultServerStatus(in *VaultServerStatus, out *v1alpha2.VaultServerStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_VaultServerStatus_To_v1alpha2_VaultServerStatus(in, out, s)
}

func autoConvert_v1alpha2_VaultServerStatus_To_v1alpha1_VaultServerStatus(in *v1alpha2.VaultServerStatus, out *VaultServerStatus, s conversion.Scope) error {
	out.ObservedGeneration = in.ObservedGeneration
	out.Phase = VaultServerPhase(in.Phase)
	out.Initialized = in.Initialized
	out.ServiceName = in.ServiceName
	out.ClientPort = in.ClientPort
	if err := Convert_v1alpha2_VaultStatus_To_v1alpha1_VaultStatus(&in.VaultStatus, &out.VaultStatus, s); err != nil {
		return err
	}
	out.UpdatedNodes = *(*[]string)(unsafe.Pointer(&in.UpdatedNodes))
	out.Conditions = *(*[]apiv1.Condition)(unsafe.Pointer(&in.Conditions))
	out.AuthMethodStatus = *(*[]AuthMethodStatus)(unsafe.Pointer(&in.AuthMethodStatus))
	return nil
}

// Convert_v1alpha2_VaultServerStatus_To_v1alpha1_VaultServerStatus is an autogenerated conversion function.
func Convert_v1alpha2_VaultServerStatus_To_v1alpha1_VaultServerStatus(in *v1alpha2.VaultServerStatus, out *VaultServerStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_VaultServerStatus_To_v1alpha1_VaultServerStatus(in, out, s)
}

func autoConvert_v1alpha1_VaultStatus_To_v1alpha2_VaultStatus(in *VaultStatus, out *v1alpha2.VaultStatus, s conversion.Scope) error {
	out.Active = in.Active
	out.Standby = *(*[]string)(unsafe.Pointer(&in.Standby))
	out.Sealed = *(*[]string)(unsafe.Pointer(&in.Sealed))
	out.Unsealed = *(*[]string)(unsafe.Pointer(&in.Unsealed))
	return nil
}

// Convert_v1alpha1_VaultStatus_To_v1alpha2_VaultStatus is an autogenerated conversion function.
func Convert_v1alpha1_VaultStatus_To_v1alpha2_VaultStatus(in *VaultStatus, out *v1alpha2.VaultStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_VaultStatus_To_v1alpha2_VaultStatus(in, out, s)
}

func autoConvert_v1alpha2_VaultStatus_To_v1alpha1_VaultStatus(in *v1alpha2.VaultStatus, out *VaultStatus, s conversion.Scope) error {
	out.Active = in.Active
	out.Standby = *(*[]string)(unsafe.Pointer(&in.Standby))
	out.Sealed = *(*[]string)(unsafe.Pointer(&in.Sealed))
	out.Unsealed = *(*[]string)(unsafe.Pointer(&in.Unsealed))
	return nil
}

// Convert_v1alpha2_VaultStatus_To_v1alpha1_VaultStatus is an autogenerated conversion function.
func Convert_v1alpha2_VaultStatus_To_v1alpha1_VaultStatus(in *v1alpha2.VaultStatus, out *VaultStatus, s conversion.Scope) error {
	return autoConvert_v1alpha2_VaultStatus_To_v1alpha1_VaultStatus(in, out, s)
}
